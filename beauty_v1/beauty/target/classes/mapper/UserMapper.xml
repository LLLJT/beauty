<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ishang.beauty.dao.UserMapper">

	<resultMap id="BaseResultMap" type="com.ishang.beauty.entity.User">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="roleid" jdbcType="INTEGER" property="roleid" />
		<result column="sex" jdbcType="BIT" property="sex" />
		<result column="birthday" jdbcType="DATE" property="birthday" />
		<result column="school" jdbcType="VARCHAR" property="school" />
		<result column="introduction" jdbcType="VARCHAR" property="introduction" />
		<result column="profileimg" jdbcType="VARCHAR" property="profileimg" />
		<result column="del_flag" jdbcType="BIT" property="del_flag" />
	</resultMap>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	
	<insert id="insert" parameterType="com.ishang.beauty.entity.User">
		insert into user (username, password, roleid, sex, birthday, school, introduction, profileimg, del_flag)
		values (
			#{username,jdbcType=VARCHAR},
			#{password,jdbcType=VARCHAR},
			#{roleid,jdbcType=INTEGER}, 
			#{sex,jdbcType=BIT}, 
			#{birthday,jdbcType=DATE},
			#{school,jdbcType=VARCHAR}, 
			#{introduction,jdbcType=VARCHAR},
			#{profileimg,jdbcType=VARCHAR},
			#{del_flag,jdbcType=BIT}
		)
	</insert>
	
	<!-- updatepwd：删除username字段，因为修改密码和修改头像只需要id和password -->
	<update id="updateByPrimaryKey" parameterType="com.ishang.beauty.entity.User">
		update user
		set 
			username=#{username,jdbcType=VARCHAR},
			password = #{password,jdbcType=VARCHAR},
			roleid = #{roleid,jdbcType=INTEGER},
			sex = #{sex,jdbcType=BIT},
			birthday = #{birthday,jdbcType=DATE},
			school = #{school,jdbcType=VARCHAR},
			introduction = #{introduction,jdbcType=VARCHAR},
			profileimg = #{profileimg,jdbcType=VARCHAR},
			del_flag = #{del_flag,jdbcType=BIT}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 自己新增。。突然又要用到update -->
	<update id="updateByPrimaryKeyPlus" parameterType="com.ishang.beauty.entity.User">
		update user
		set 
			username=#{username,jdbcType=VARCHAR},
			password = #{password,jdbcType=VARCHAR},
			roleid = #{roleid,jdbcType=INTEGER},
			sex = #{sex,jdbcType=BIT},
			birthday = #{birthday,jdbcType=DATE},
			school = #{school,jdbcType=VARCHAR},
			introduction = #{introduction,jdbcType=VARCHAR},
			profileimg = #{profileimg,jdbcType=VARCHAR},
			del_flag = #{del_flag,jdbcType=BIT}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select id, username, `password`, roleid, sex, birthday, school, introduction, profileimg, del_flag
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<select id="selectAll" resultMap="BaseResultMap">
		select id, username, `password`, roleid, sex, birthday, school, introduction, profileimg, del_flag
		from user
	</select>

	<select id="selectlike" parameterType="com.ishang.beauty.entity.User" resultMap="BaseResultMap">
		select id, username, `password`, roleid, sex, birthday, school, introduction, profileimg, del_flag
		from user
		where username like concat('%',#{username,jdbcType=VARCHAR},'%')
	</select>

	<update id="updateImg" parameterType="com.ishang.beauty.entity.User">
		update user
		set profileimg=#{profileimg}
		where id=#{id}
	</update>
	
	<select id="selectlatestup" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select id, username, `password`, roleid, sex, birthday, school, introduction, profileimg, del_flag
		from user
		WHERE id IN (SELECT userid from blog
			WHERE userid in (SELECT uploaderid from user_follow WHERE followerid = #{followerid, jdbcType=INTEGER})
				<![CDATA[ AND DATE_SUB(CURDATE(),INTERVAL 7 day) <=DATE(createtime)  ]]>	)
	</select>
	
	<!-- 仅修改password -->
	<update id="updatepswd">
		UPDATE `user`
		SET
			`password`  = #{pswd}
		WHERE id= #{userid}
	</update>
	
</mapper>